{
  "version": 3,
  "sources": ["../../server/cors-middleware.ts"],
  "sourcesContent": ["/**\r\n * CORS Middleware para Pokemon Showdown\r\n * Permite conex\u00F5es do GitHub Pages para o servidor no Render\r\n */\r\n\r\nimport * as http from 'http';\r\n\r\n// Configura\u00E7\u00E3o de CORS\r\nconst CORS_CONFIG = {\r\n\t// Origens permitidas\r\n\tallowedOrigins: [\r\n\t\t'https://feneto7.github.io',\r\n\t\t'https://feneto7.github.io/ocbmon-showdown-client',\r\n\t\t'https://feneto7.github.io/ocbmon-showdown-client/public',\r\n\t\t'http://localhost:4280',\r\n\t\t'http://localhost:3000',\r\n\t\t'http://127.0.0.1:4280',\r\n\t\t'http://127.0.0.1:3000'\r\n\t],\r\n\t\r\n\t// M\u00E9todos permitidos\r\n\tallowedMethods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\r\n\t\r\n\t// Headers permitidos\r\n\tallowedHeaders: [\r\n\t\t'Content-Type',\r\n\t\t'Authorization',\r\n\t\t'X-Requested-With',\r\n\t\t'Accept',\r\n\t\t'Origin',\r\n\t\t'Access-Control-Request-Method',\r\n\t\t'Access-Control-Request-Headers',\r\n\t\t'Sec-WebSocket-Extensions',\r\n\t\t'Sec-WebSocket-Key',\r\n\t\t'Sec-WebSocket-Protocol',\r\n\t\t'Sec-WebSocket-Version',\r\n\t\t'Upgrade',\r\n\t\t'Connection'\r\n\t],\r\n\t\r\n\t// Permitir credenciais\r\n\tcredentials: true,\r\n\t\r\n\t// Cache de preflight\r\n\tmaxAge: 86400 // 24 horas\r\n};\r\n\r\n/**\r\n * Middleware CORS para requisi\u00E7\u00F5es HTTP\r\n */\r\nexport function applyCorsHeaders(req: http.IncomingMessage, res: http.ServerResponse): boolean {\r\n\tconst origin = req.headers.origin as string;\r\n\t\r\n\t// Verifica se a origem \u00E9 permitida\r\n\tconst isOriginAllowed = !origin || \r\n\t\tCORS_CONFIG.allowedOrigins.includes(origin) || \r\n\t\tCORS_CONFIG.allowedOrigins.some(allowed => origin.startsWith(allowed));\r\n\t\r\n\tif (isOriginAllowed) {\r\n\t\t// Aplica headers CORS\r\n\t\tres.setHeader('Access-Control-Allow-Origin', origin || '*');\r\n\t\tres.setHeader('Access-Control-Allow-Methods', CORS_CONFIG.allowedMethods.join(', '));\r\n\t\tres.setHeader('Access-Control-Allow-Headers', CORS_CONFIG.allowedHeaders.join(', '));\r\n\t\tres.setHeader('Access-Control-Allow-Credentials', 'true');\r\n\t\tres.setHeader('Access-Control-Max-Age', CORS_CONFIG.maxAge.toString());\r\n\t\t\r\n\t\t// Headers de seguran\u00E7a adicionais\r\n\t\tres.setHeader('X-Frame-Options', 'SAMEORIGIN');\r\n\t\tres.setHeader('X-Content-Type-Options', 'nosniff');\r\n\t\tres.setHeader('X-XSS-Protection', '1; mode=block');\r\n\t}\r\n\t\r\n\t// Responde a requisi\u00E7\u00F5es OPTIONS (preflight)\r\n\tif (req.method === 'OPTIONS') {\r\n\t\tres.writeHead(200);\r\n\t\tres.end();\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\treturn false;\r\n}\r\n\r\n/**\r\n * Verifica se uma origem WebSocket \u00E9 permitida\r\n */\r\nexport function isWebSocketOriginAllowed(origin?: string): boolean {\r\n\tif (!origin) return true; // Permite conex\u00F5es sem origem (desenvolvimento local)\r\n\t\r\n\treturn CORS_CONFIG.allowedOrigins.includes(origin) || \r\n\t\t   CORS_CONFIG.allowedOrigins.some(allowed => origin.startsWith(allowed));\r\n}\r\n\r\n/**\r\n * Configura\u00E7\u00E3o de CORS para SockJS\r\n */\r\nexport const sockjsCorsOptions = {\r\n\torigin: '*:*',\r\n\twebsocket: true,\r\n\theartbeat_delay: 25000,\r\n\tdisconnect_delay: 5000,\r\n\tsockjs_url: 'https://cdn.jsdelivr.net/npm/sockjs-client@1/dist/sockjs.min.js',\r\n\tlog: (severity: string, message: string) => {\r\n\t\tif (Config.debugsockets) {\r\n\t\t\tconsole.log(`SockJS ${severity}: ${message}`);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * Log de conex\u00F5es CORS para debugging\r\n */\r\nexport function logCorsRequest(req: http.IncomingMessage, allowed: boolean): void {\r\n\tif (Config.debugsockets) {\r\n\t\tconst origin = req.headers.origin;\r\n\t\tconst method = req.method;\r\n\t\tconst url = req.url;\r\n\t\t\r\n\t\tconsole.log(`CORS ${allowed ? 'ALLOWED' : 'BLOCKED'}: ${method} ${url} from ${origin || 'unknown origin'}`);\r\n\t}\r\n}\r\n\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,MAAM,cAAc;AAAA;AAAA,EAEnB,gBAAgB;AAAA,IACf;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAAA;AAAA,EAGA,gBAAgB,CAAC,OAAO,QAAQ,OAAO,UAAU,SAAS;AAAA;AAAA,EAG1D,gBAAgB;AAAA,IACf;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAAA;AAAA,EAGA,aAAa;AAAA;AAAA,EAGb,QAAQ;AAAA;AACT;AAKO,SAAS,iBAAiB,KAA2B,KAAmC;AAC9F,QAAM,SAAS,IAAI,QAAQ;AAG3B,QAAM,kBAAkB,CAAC,UACxB,YAAY,eAAe,SAAS,MAAM,KAC1C,YAAY,eAAe,KAAK,aAAW,OAAO,WAAW,OAAO,CAAC;AAEtE,MAAI,iBAAiB;AAEpB,QAAI,UAAU,+BAA+B,UAAU,GAAG;AAC1D,QAAI,UAAU,gCAAgC,YAAY,eAAe,KAAK,IAAI,CAAC;AACnF,QAAI,UAAU,gCAAgC,YAAY,eAAe,KAAK,IAAI,CAAC;AACnF,QAAI,UAAU,oCAAoC,MAAM;AACxD,QAAI,UAAU,0BAA0B,YAAY,OAAO,SAAS,CAAC;AAGrE,QAAI,UAAU,mBAAmB,YAAY;AAC7C,QAAI,UAAU,0BAA0B,SAAS;AACjD,QAAI,UAAU,oBAAoB,eAAe;AAAA,EAClD;AAGA,MAAI,IAAI,WAAW,WAAW;AAC7B,QAAI,UAAU,GAAG;AACjB,QAAI,IAAI;AACR,WAAO;AAAA,EACR;AAEA,SAAO;AACR;AAKO,SAAS,yBAAyB,QAA0B;AAClE,MAAI,CAAC;AAAQ,WAAO;AAEpB,SAAO,YAAY,eAAe,SAAS,MAAM,KAC7C,YAAY,eAAe,KAAK,aAAW,OAAO,WAAW,OAAO,CAAC;AAC1E;AAKO,MAAM,oBAAoB;AAAA,EAChC,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,iBAAiB;AAAA,EACjB,kBAAkB;AAAA,EAClB,YAAY;AAAA,EACZ,KAAK,CAAC,UAAkB,YAAoB;AAC3C,QAAI,OAAO,cAAc;AACxB,cAAQ,IAAI,UAAU,aAAa,SAAS;AAAA,IAC7C;AAAA,EACD;AACD;AAKO,SAAS,eAAe,KAA2B,SAAwB;AACjF,MAAI,OAAO,cAAc;AACxB,UAAM,SAAS,IAAI,QAAQ;AAC3B,UAAM,SAAS,IAAI;AACnB,UAAM,MAAM,IAAI;AAEhB,YAAQ,IAAI,QAAQ,UAAU,YAAY,cAAc,UAAU,YAAY,UAAU,kBAAkB;AAAA,EAC3G;AACD;",
  "names": []
}
